# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  SBT_THREAD_NUMBER: 2
  OTHER_NODE_IMAGE: turtlenetwork/tnnode:1.2.2

jobs:
- job: Default
  timeoutInMinutes: 360
  pool:
    name: Default

  steps:
  - script: |
      docker pull testcontainersofficial/ryuk:0.3.0

  - script: |
      sbt -J-Xms5G -J-Xmx5G dex-it/docker
      docker images
    displayName: 'Build docker and show'
    
  - task: Docker@2
    inputs:
      containerRegistry: 'turtlenetwork docker'
      repository: 'turtlenetwork/matcher-node'
      command: 'push'
      tags: 'latest'
    displayName: 'Run push matcher-node '  

  - task: Docker@2
    inputs:
      containerRegistry: 'turtlenetwork docker'
      repository: 'turtlenetwork/matcher-server'
      command: 'push'
      tags: 'latest'
    displayName: 'Run push matcher-server '

  - script: 'sbt -J-Xms5G -J-Xmx5G dex-it/test'
    displayName: 'Run docker tests '
      
  - task: PublishTestResults@2
    displayName: 'Publish Test Results target/test-reports/*.xml copy'
    inputs:
      testResultsFiles: 'target/test-reports/*.xml'
    condition: succeededOrFailed()

- job: quickCheck
  timeoutInMinutes: 360
  pool:
    name: Default

  steps:
  - script: 'sbt -J-Xms5G -J-Xmx5G quickCheck'
    displayName: 'Run quickCheck tests '

  - task: PublishTestResults@2
    displayName: 'Publish Test Results target/test-reports/*.xml copy'
    inputs:
      testResultsFiles: 'target/test-reports/*.xml'
    condition: succeededOrFailed()